name: Pull Request Workflow

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run linting
        run: npm run lint

  test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run tests with coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  status-comment:
    name: PR Status Comment
    needs: test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Create status comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            let coverageSummary = '';
            
            try {
              // Try to read coverage summary if it exists
              const coverageData = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
              const totalCoverage = coverageData.total;
              
              coverageSummary = `
            ## Coverage Summary:
            - Statements: ${totalCoverage.statements.pct}%
            - Branches: ${totalCoverage.branches.pct}%
            - Functions: ${totalCoverage.functions.pct}%
            - Lines: ${totalCoverage.lines.pct}%
              `;
            } catch (error) {
              coverageSummary = '> Could not read coverage data';
            }
            
            const body = `## CI Status: ✅ All checks passed!
            
            ### Workflow Summary:
            - ✅ Linting passed
            - ✅ Unit tests passed
            
            ${coverageSummary}
            
            [View detailed test coverage report](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
